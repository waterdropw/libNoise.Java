/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.xbwee.libnoise.utils;

import net.xbwee.libnoise.module.Module;

public class GradientColor {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public GradientColor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(GradientColor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NoiseUtilsJNI.delete_GradientColor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public GradientColor() {
    this(NoiseUtilsJNI.new_GradientColor(), true);
  }

  public void AddGradientPoint(double gradientPos, Color gradientColor) {
    NoiseUtilsJNI.GradientColor_AddGradientPoint(swigCPtr, this, gradientPos, Color.getCPtr(gradientColor), gradientColor);
  }

  public void Clear() {
    NoiseUtilsJNI.GradientColor_Clear(swigCPtr, this);
  }

  public Color GetColor(double gradientPos) {
    return new Color(NoiseUtilsJNI.GradientColor_GetColor(swigCPtr, this, gradientPos), false);
  }

  public GradientPoint GetGradientPointArray() {
    long cPtr = NoiseUtilsJNI.GradientColor_GetGradientPointArray(swigCPtr, this);
    return (cPtr == 0) ? null : new GradientPoint(cPtr, false);
  }

  public int GetGradientPointCount() {
    return NoiseUtilsJNI.GradientColor_GetGradientPointCount(swigCPtr, this);
  }

}
